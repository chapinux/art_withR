ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
#keep only the largest connected compoment
#gplot.layout.fruchtermanreingold()
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="kamadakawai" )
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
ll <- read_csv("links.csv")
names(ll) <- c("nbline", "O", "D")
ll <- subset(ll, select = c("O","D"))
n <- floor(nrow(ll) / 3)
n<- 2000
ll <- head(ll,n)
gg <- graph.data.frame(ll,directed = T)
# find largest connected component
comps <- decompose.graph(gg)
lgcidx <- which.max(sapply(comps, vcount))
g <- comps[[lgcidx]]
#save as csv file edglist and reload as network object
igraph::write_graph(g,"lgc.csv",format = "edgelist")
ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
#keep only the largest connected compoment
#gplot.layout.fruchtermanreingold()
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="mds" )
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="hall" )
#, layout.par = list(niter=1000, cool.exp=2)
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="springrepulse" )
#, layout.par = list(niter=1000, cool.exp=2)
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="fruchtermanreingold" )
#, layout.par = list(niter=1000, cool.exp=2)
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="fruchtermanreingold" , layout.par = list(niter=1500))
#, layout.par = list(niter=1000, cool.exp=2)
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
capabilities()
str(g)
img <- png("coral%d.png", width = 1000, height = 1000, res=92)
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="fruchtermanreingold" , layout.par = list(niter=1500))
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
dev.off()
make_png <- function(g){
img <- png("coral%d.png", width = 1000, height = 1000, res=92)
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="fruchtermanreingold" , layout.par = list(niter=1500))
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
dev.off()
}
str(g)
g$val
g[1,]
g %v% "deg" <- degree(g,gmode = "total")
list.vertex.attributes(g)
degs <- degree(g,gmode = "total")
for ( i in 1:10){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g %s% which(deg>1)
make_png(g)
i <- i +1
}
for ( i in 1:10){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g %s% which(degs>1)
make_png(g)
i <- i +1
}
setwd("/home/ubuntu/stats/art_with_R/coral_grow/")
ll <- read_csv("links.csv")
names(ll) <- c("nbline", "O", "D")
ll <- subset(ll, select = c("O","D"))
n <- floor(nrow(ll) / 3)
n<- 1000
ll <- head(ll,n)
gg <- graph.data.frame(ll,directed = T)
# find largest connected component
comps <- decompose.graph(gg)
lgcidx <- which.max(sapply(comps, vcount))
g <- comps[[lgcidx]]
igraph::write_graph(g,"lgc.csv",format = "edgelist")
ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
for ( i in 1:10){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
make_png(g)
i <- i +1
}
make_png <- function(g){
png("coral%d.png", width = 1000, height = 1000, res=92)
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="fruchtermanreingold" , layout.par = list(niter=1000))
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
dev.off()
}
for ( i in 1:10){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
make_png(g)
i <- i +1
}
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:10){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
make_png(g)
i <- i +1
}
dev.off()
make_png <- function(g){
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="fruchtermanreingold" , layout.par = list(niter=1000))
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
p
}
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:10){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
make_png(g)
i <- i +1
}
dev.off()
plot(p)
make_png <- function(g){
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode="fruchtermanreingold" , layout.par = list(niter=1000))
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
plot(p)
}
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:10){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
make_png(g)
i <- i +1
}
dev.off()
make_png <- function(g,layout){
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="degree",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode=layout , layout.par = list(niter=1000))
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
plot(p)
}
ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
lay <- gplot.layout.fruchtermanreingold(g)
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:10){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
make_png(g,lay)
i <- i +1
}
g %s% which(degs>1)
g <- network(ll,directed = T)
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
g
str(lay)
lay[1,1]
lay[1,2]
lay[1,3]
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
g %v% "x" <- lay[,1]
g %v% "y" <- lay[,2]
list(g %v% "x",g %v% "y")
as.matrix(list(g %v% "x",g %v% "y"))
coords <- data.frame(x = as.numeric(), y = as.numeric())
coords$x <- g %v% "x"
coords <- data.frame()
coords$x <- g %v% "x"
coords <- cbind(g %v% "x" ,  g %v% "y")
ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
g %v% "x" <- lay[,1]
g %v% "y" <- lay[,2]
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:10){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
make_png <- function(g,layout){
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="deg",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode=layout , layout.par = list(niter=1000))
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
plot(p)
}
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:20){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
setwd("/home/ubuntu/stats/art_with_R/coral_grow/")
ll <- read_csv("links.csv")
names(ll) <- c("nbline", "O", "D")
ll <- subset(ll, select = c("O","D"))
n <- floor(nrow(ll) / 3)
n<- 3000
ll <- head(ll,n)
gg <- graph.data.frame(ll,directed = T)
# find largest connected component
comps <- decompose.graph(gg)
lgcidx <- which.max(sapply(comps, vcount))
g <- comps[[lgcidx]]
#save as csv file edglist and reload as network object
igraph::write_graph(g,"lgc.csv",format = "edgelist")
ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
#keep only the largest connected compoment
#layout fixe
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
g %v% "x" <- lay[,1]
g %v% "y" <- lay[,2]
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:20){
#compute degree
cat(i, "/10\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
setwd("/home/ubuntu/stats/art_with_R/coral_grow/")
ll <- read_csv("links.csv")
names(ll) <- c("nbline", "O", "D")
ll <- subset(ll, select = c("O","D"))
n <- floor(nrow(ll) / 3)
n<- 6000
ll <- head(ll,n)
gg <- graph.data.frame(ll,directed = T)
# find largest connected component
comps <- decompose.graph(gg)
lgcidx <- which.max(sapply(comps, vcount))
g <- comps[[lgcidx]]
#save as csv file edglist and reload as network object
igraph::write_graph(g,"lgc.csv",format = "edgelist")
ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
#keep only the largest connected compoment
#layout fixe
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
g %v% "x" <- lay[,1]
g %v% "y" <- lay[,2]
make_png <- function(g,layout){
p<- ggnet2(g, node.size = 2,
node.color = "grey75",
size="deg",
edge.color = "grey55" ,
edge.size=  0.1,  shape=21,
mode=layout , layout.par = list(niter=1000))
p <- p + ggplot2::theme(panel.background = element_rect(fill = "grey10"))
p <- p +guides(size=FALSE)
plot(p)
}
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:40){
#compute degree
cat(i, "/40\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
setwd("/home/ubuntu/stats/art_with_R/coral_grow/")
ll <- read_csv("links.csv")
names(ll) <- c("nbline", "O", "D")
ll <- subset(ll, select = c("O","D"))
n <- floor(nrow(ll) / 3)
n<- 9000
ll <- head(ll,n)
gg <- graph.data.frame(ll,directed = T)
# find largest connected component
comps <- decompose.graph(gg)
lgcidx <- which.max(sapply(comps, vcount))
g <- comps[[lgcidx]]
#save as csv file edglist and reload as network object
igraph::write_graph(g,"lgc.csv",format = "edgelist")
ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
#keep only the largest connected compoment
#layout fixe
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
g %v% "x" <- lay[,1]
g %v% "y" <- lay[,2]
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:20){
#compute degree
cat(i, "/20\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:20){
#compute degree
cat(i, "/20\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
setwd("/home/ubuntu/stats/art_with_R/coral_grow/")
ll <- read_csv("links.csv")
names(ll) <- c("nbline", "O", "D")
ll <- subset(ll, select = c("O","D"))
n <- floor(nrow(ll) / 3)
n<- 9000
ll <- head(ll,n)
gg <- graph.data.frame(ll,directed = T)
# find largest connected component
comps <- decompose.graph(gg)
lgcidx <- which.max(sapply(comps, vcount))
g <- comps[[lgcidx]]
#save as csv file edglist and reload as network object
igraph::write_graph(g,"lgc.csv",format = "edgelist")
ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
#keep only the largest connected compoment
#layout fixe
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
g %v% "x" <- lay[,1]
g %v% "y" <- lay[,2]
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:20){
#compute degree
cat(i, "/20\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
g <- network(ll,directed = T)
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
g %v% "x" <- lay[,1]
g %v% "y" <- lay[,2]
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:20){
#compute degree
cat(i, "/20\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>i)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
g %v% "x" <- lay[,1]
g %v% "y" <- lay[,2]
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:20){
#compute degree
cat(i, "/20\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
ll<- read_delim("lgc.csv", delim=" ", col_types = list(col_character(), col_character()))
names(ll)<- c("O","D")
g <- network(ll,directed = T)
#keep only the largest connected compoment
#layout fixe
lay <- gplot.layout.fruchtermanreingold(g,layout.par = list(niter=500))
g %v% "x" <- lay[,1]
g %v% "y" <- lay[,2]
png("coral%d.png", width = 1000, height = 1000, res=92)
for ( i in 1:20){
#compute degree
cat(i, "/20\n")
degs <- degree(g,gmode = "total")
g <- g %s% which(degs>1)
coords <- cbind(g %v% "x" ,  g %v% "y")
make_png(g,coords)
i <- i +1
}
dev.off()
